version: 2.1
jobs:
  build-dev:
    docker:
      - image: liftbridge/liftbridge-circleci:0.1.0
        environment:
          GO111MODULE: "on"
    working_directory: "~/project"
    steps:
      - checkout
      - run:
          name: Build dev binary
          command: |
            make build-dev
      - persist_to_workspace:
          root: .
          paths:
            - liftbridge-dev
            - docker/
  test:
    docker:
      - image: liftbridge/liftbridge-circleci:0.1.0
        environment:
          GO111MODULE: "on"
    working_directory: "~/project"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            go get github.com/mattn/goveralls
      - run:
          name: Test
          command: |
            go test -v .
            go test -v -coverprofile=coverage.txt ./server/...
            goveralls -coverprofile=coverage.txt -service=circle-ci -repotoken=$COVERALLS_REPO_TOKEN

  build-and-push-standalone-dev-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    working_directory: "~/project"
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/project
      - run:
          name: set image version
          command: |
            if [ -n "$CIRCLE_TAG" ]; then
                echo "export VERSION='${CIRCLE_TAG}'" >> $BASH_ENV
            else
                echo "export VERSION='${CIRCLE_SHA1}'" >> $BASH_ENV
            fi
      - run:
          name: build image
          command: |
            docker build -t "liftbridge/standalone-dev:${VERSION}" -f docker/dev-standalone/Dockerfile .
            docker tag "liftbridge/standalone-dev:${VERSION}" 'liftbridge/standalone-dev:latest'
      - run:
          name: publish image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push "liftbridge/standalone-dev:${VERSION}"
            docker push 'liftbridge/standalone-dev:latest'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-dev
      - test
      - build-and-push-standalone-dev-image:
          requires:
            - build-dev
          filters:
            branches:
              only: master

